import tkinter as tk
from tkinter import filedialog, messagebox
from openpyxl import load_workbook
import os

def process_file():
    filepath = filedialog.askopenfilename(
        title="–í—ã–±–µ—Ä–∏—Ç–µ Excel-—Ñ–∞–π–ª",
        filetypes=[("Excel files", "*.xlsx")]
    )
    if not filepath:
        return

    try:
        wb = load_workbook(filepath, data_only=False, keep_links=False)
        sheet_name = next((name for name in wb.sheetnames if "–°–î–≠–ö" in name.upper()), None)

        if not sheet_name:
            messagebox.showerror("–û—à–∏–±–∫–∞", "–ù–µ –Ω–∞–π–¥–µ–Ω –ª–∏—Å—Ç —Å '–°–î–≠–ö' –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏.")
            return

        ws = wb[sheet_name]

        # –ü–æ–∏—Å–∫ –∑–∞–≥–æ–ª–æ–≤–∫–∞
        target_cell = None
        for row in ws.iter_rows(min_row=1, max_row=100, max_col=30):
            for cell in row:
                if str(cell.value).strip().lower() == "–ª–æ–∫–∞–ª—å–Ω—ã–π –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç":
                    target_cell = cell
                    break
            if target_cell:
                break

        if not target_cell:
            messagebox.showerror("–û—à–∏–±–∫–∞", "–ù–µ –Ω–∞–π–¥–µ–Ω –∑–∞–≥–æ–ª–æ–≤–æ–∫ '–õ–æ–∫–∞–ª—å–Ω—ã–π –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç'.")
            return

        col_letter = target_cell.column_letter
        row = target_cell.row + 1

        while ws[f"{col_letter}{row}"].value in [None, ""]:
            row += 1

        changed_count = 0

        while True:
            cell = ws[f"{col_letter}{row}"]
            raw_value = cell.value
            if raw_value is None or str(raw_value).strip() == "":
                break

            value_str = str(raw_value).replace(" ", "").replace(",", ".")
            try:
                value_float = float(value_str)
            except ValueError:
                row += 1
                continue

            if value_float == 1.5:
                cell.value = "1,2"
                changed_count += 1
            elif value_float == 2.0:
                cell.value = "1,4"
                changed_count += 1
            elif value_float == 1.0:
                cell.value = "1"
                changed_count += 1

            row += 1

        # –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –ø—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
        base, ext = os.path.splitext(filepath)
        default_path = base + "_–æ–±–Ω–æ–≤–ª–µ–Ω–æ.xlsx"

        save_path = filedialog.asksaveasfilename(
            title="–°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π —Ñ–∞–π–ª",
            defaultextension=".xlsx",
            initialfile=os.path.basename(default_path),
            filetypes=[("Excel files", "*.xlsx")]
        )

        if save_path:
            wb.save(save_path)
            messagebox.showinfo("–ì–æ—Ç–æ–≤–æ", f"–§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω—ë–Ω!\n–ó–∞–º–µ–Ω–µ–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–π: {changed_count}")

    except Exception as e:
        messagebox.showerror("–û—à–∏–±–∫–∞", str(e))


# –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å
root = tk.Tk()
root.title("üõ† –ê–≤—Ç–æ–∑–∞–º–µ–Ω–∞ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤ –≤ Excel (–°–î–≠–ö)")
root.geometry("450x250")
root.resizable(False, False)

title = tk.Label(
    root, 
    text="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!",
    font=("Arial", 16, "bold"),
    pady=10
)
title.pack()

description = tk.Label(
    root,
    text="–≠—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–º–µ–Ω—è–µ—Ç –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã\n1,5 ‚Üí 1,2 –∏ 2 ‚Üí 1,4 –≤ Excel-—Ñ–∞–π–ª–∞—Ö –æ—Ç –°–î–≠–ö.",
    font=("Arial", 11),
    justify="center",
    wraplength=400
)
description.pack(pady=5)

button = tk.Button(
    root,
    text="üìÅ –í—ã–±—Ä–∞—Ç—å Excel-—Ñ–∞–π–ª",
    font=("Arial", 12),
    command=process_file,
    bg="#4CAF50",
    fg="white",
    padx=20,
    pady=10
)
button.pack(pady=25)

footer = tk.Label(
    root,
    text="–ê–≤—Ç–æ—Ä: Maksim\n–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ .xlsx —Ñ–∞–π–ª—ã",
    font=("Arial", 9),
    fg="gray"
)
footer.pack(side="bottom", pady=5)

root.mainloop()
