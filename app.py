import streamlit as st
import openpyxl
from io import BytesIO

st.title("–ê–≤—Ç–æ–∑–∞–º–µ–Ω–∞ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤ –≤ Excel (–°–î–≠–ö)")

uploaded_file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ Excel-—Ñ–∞–π–ª", type=["xlsx"])

if uploaded_file:
    try:
        wb = openpyxl.load_workbook(uploaded_file, data_only=False, keep_links=False)
        # –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –ª–∏—Å—Ç —Å –∏–º–µ–Ω–µ–º, —Å–æ–¥–µ—Ä–∂–∞—â–∏–º "–°–î–≠–ö"
        sheet_name = next((name for name in wb.sheetnames if "–°–î–≠–ö" in name.upper()), None)

        if not sheet_name:
            st.error("–ù–µ –Ω–∞–π–¥–µ–Ω –ª–∏—Å—Ç, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π '–°–î–≠–ö' –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏.")
        else:
            ws = wb[sheet_name]

            # –ò—â–µ–º —è—á–µ–π–∫—É —Å –∑–∞–≥–æ–ª–æ–≤–∫–æ–º "–õ–æ–∫–∞–ª—å–Ω—ã–π –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç"
            target_cell = None
            for row in ws.iter_rows(min_row=1, max_row=100, max_col=30):
                for cell in row:
                    if str(cell.value).strip().lower() == "–ª–æ–∫–∞–ª—å–Ω—ã–π –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç":
                        target_cell = cell
                        break
                if target_cell:
                    break

            if not target_cell:
                st.error("–ó–∞–≥–æ–ª–æ–≤–æ–∫ '–õ–æ–∫–∞–ª—å–Ω—ã–π –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç' –Ω–µ –Ω–∞–π–¥–µ–Ω.")
            else:
                col_letter = target_cell.column_letter
                row = target_cell.row + 1

                # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏ –ø–æ—Å–ª–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞
                while ws[f"{col_letter}{row}"].value in [None, ""]:
                    row += 1

                changed_count = 0

                # –ó–∞–º–µ–Ω—è–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –¥–æ –ø–µ—Ä–≤–æ–≥–æ –ø—É—Å—Ç–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è
                while True:
                    cell = ws[f"{col_letter}{row}"]
                    raw_value = cell.value

                    if raw_value is None or str(raw_value).strip() == "":
                        break

                    # –ü—Ä–∏–≤–µ–¥–µ–Ω–∏–µ –∫ —á–∏—Å–ª—É (—Ä—É—Å—Å–∫–∞—è –ª–æ–∫–∞–ª—å –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∞ —á–µ—Ä–µ–∑ –∑–∞–º–µ–Ω—ã)
                    value_str = str(raw_value).replace(" ", "").replace(",", ".")
                    try:
                        value_float = float(value_str)
                    except ValueError:
                        row += 1
                        continue

                    if value_float == 1.5:
                        cell.value = "1,2"
                        changed_count += 1
                    elif value_float == 2.0:
                        cell.value = "1,4"
                        changed_count += 1
                    elif value_float == 1.0:
                        cell.value = "1"
                        changed_count += 1
                    # –ï—Å–ª–∏ –¥—Ä—É–≥–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ ‚Äî –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º

                    row += 1

                # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
                output = BytesIO()
                wb.save(output)
                output.seek(0)

                st.success(f"–£—Å–ø–µ—à–Ω–æ –∑–∞–º–µ–Ω–µ–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–π: {changed_count}")
                st.download_button(
                    label="üì• –°–∫–∞—á–∞—Ç—å –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π —Ñ–∞–π–ª",
                    data=output,
                    file_name="updated_sdek.xlsx",
                    mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
                )

    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞: {e}")
